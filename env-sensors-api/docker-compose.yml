version: "3.5"

services:

  unifi-env-sensors-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: unifi-env-sensors-api
    restart: always
    depends_on:
      - unifi-env-sensors-db
    env_file:
      - .env

  unifi-env-sensors-rabbitmq:
    image: rabbitmq:3.9.21-alpine
    container_name: unifi-env-sensors-rabbitmq
    restart: always
    env_file:
      - .env
    environment:
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_VHOST}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}

  unifi-env-sensors-db:
    image: postgres:15.0
    container_name: unifi-env-sensors-db
    restart: always
    volumes:
      - ./docker/pg/data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  unifi-env-sensors-grafana:
    image: grafana/grafana-enterprise:9.2.3-ubuntu
    container_name: unifi-env-sensors-grafana
    restart: always
    user: "1001"
    environment:
      - GF_SERVER_ROOT_URL=https://grafana.unifi-id.click/
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./docker/grafana/conf/defaults.ini:/usr/share/grafana/conf/defaults.ini
      - ./docker/grafana/jwks.json:/jwks.json

  nginx:
    image: nginx:1.23.1-alpine
    container_name: nginx
    restart: always
    command: nginx -g "daemon off;"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/proxy.conf:/etc/nginx/proxy.conf
      - ./docker/nginx/certbot/www:/var/www/certbot/:ro
      - ./docker/nginx/certbot/conf/:/etc/nginx/ssl/:ro
      - ./docker/nginx/grafana-embedded/:/etc/nginx/html/
    env_file:
      - .env
    environment:
      - AUTH_HEADER=${AUTH_HEADER}

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - ./docker/nginx/certbot/www/:/var/www/certbot/:rw
      - ./docker/nginx/certbot/conf/:/etc/letsencrypt/:rw

networks:
  default:
    name: sensors-grafana-demo-network
    external: true

volumes:
  grafana-storage:
